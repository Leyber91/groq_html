(function () {
    /**
     * Counts the number of tokens in a given string by splitting it into words.
     * 
     * This function:
     * 1. Splits the input string using whitespace as a delimiter
     * 2. Returns the length of the resulting array, which represents the token count
     * 
     * @param {string} t - The input string to tokenize
     * @returns {number} The number of tokens (words) in the input string
     * 
     * Usage example:
     * const text = "Hello world! How are you?";
     * const tokenCount = tokenizer.countTokens(text);
     * console.log(tokenCount); // Output: 5
     * 
     * Other files that use this function:
     * - js/diagram/updateDiagram.js
     * - js/analysis/textAnalyzer.js
     * 
     * Role in overall program logic:
     * This function is crucial for text analysis and processing tasks throughout the application.
     * It provides a simple way to estimate the complexity or length of text inputs, which can be
     * used for various purposes such as input validation, text summarization, or content analysis.
     */
    function t(t) {
        return t.split(/\s+/).length
    }

    /**
     * Estimates the number of tokens based on the total character count and an average token length.
     * 
     * This function:
     * 1. Calculates the estimated token count by dividing the total character count by the average token length
     * 2. Rounds up the result to the nearest integer using Math.ceil()
     * 
     * @param {string} t - The input string to estimate tokens for
     * @param {number} e - The average token length to use for estimation
     * @returns {number} The estimated number of tokens in the input string
     * 
     * Usage example:
     * const text = "This is a sample text for token estimation.";
     * const avgTokenLength = 5;
     * const estimatedTokens = tokenizer.estimateTokens(text, avgTokenLength);
     * console.log(estimatedTokens); // Output depends on the average token length
     * 
     * Other files that use this function:
     * - js/analysis/textStatistics.js
     * - js/ui/inputValidator.js
     * 
     * Role in overall program logic:
     * This function provides a quick way to estimate token counts without performing a full tokenization.
     * It's useful for scenarios where approximate token counts are sufficient, such as input length
     * validation or preliminary text analysis. The function allows for flexibility in defining the
     * average token length, which can be adjusted based on the specific use case or language characteristics.
     */
    function e(t, e) {
        return Math.ceil(t.length / e)
    }

    // Expose the tokenizer functions to the global scope
    window.tokenizer = {
        countTokens: t,
        estimateTokens: e
    };

    // Log a message to confirm that the tokenizer has been loaded
    console.log("tokenizer.min.js loaded with enhanced functionality and documentation");
})();