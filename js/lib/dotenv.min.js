(function () {
    function parseEnv(content) {
        const env = {};
        content.split("\n").forEach(line => {
            const match = line.match(/^\s*([\w.-]+)\s*=\s*(.*)?\s*$/);
            if (match) {
                const key = match[1];
                let value = match[2] || "";
                value = value.replace(/(^["']|["']$)/g, "").trim();
                env[key] = value;
            }
        });
        return env;
    }

    function interpolateEnvVars(env) {
        Object.keys(env).forEach(key => {
            env[key] = env[key].replace(/\$\{([\w.-]+)\}/g, (_, p1) => env[p1] || '');
        });
        return env;
    }

    window.dotenv = {
        config: function (options = {}) {
            const configElement = document.getElementById(options.configId || "dotenv-config");
            if (!configElement) {
                console.error("dotenv: Configuration element not found");
                return;
            }

            const env = parseEnv(configElement.textContent);
            const interpolatedEnv = interpolateEnvVars(env);

            Object.keys(interpolatedEnv).forEach(key => {
                if (!(key in process.env) || options.overwrite) {
                    process.env[key] = interpolatedEnv[key];
                }
            });

            if (options.debug) {
                console.log("dotenv: Loaded environment variables", interpolatedEnv);
            }
        },
        parse: parseEnv
    };

    console.log("dotenv.min.js loaded and enhanced");
})();